{"version":3,"sources":["pages/Recommed/Recommed.jsx"],"names":["Recommed","state","banners","recommmedList","newSong","className","afterChange","event","onChange","autoplay","this","map","item","src","imageUrl","alt","encodeId","grid","gutter","column","dataSource","renderItem","Item","onClick","props","history","push","id","picUrl","name","substr","size","bordered","actions","style","fontSize","console","log","getBanners","getRecommedList","getNewSong","$http","get","res","code","setState","result","Component"],"mappings":"uPAQqBA,EAAQ,iKAQxB,OARwB,oCACzBC,MAAQ,CAEJC,QAAS,GAETC,cAAgB,GAEhBC,QAAS,IACZ,EA6FA,OA7FA,mCAED,WAAU,IAAD,OACL,OACI,gCAEI,cAAC,IAAQ,CACTC,UAAU,MACVC,YAAa,SAACC,GAAK,OAAK,EAAKC,SAASD,EAAM,EAC5CE,UAAU,EAAK,SAIHC,KAAKT,MAAMC,QAAQS,KAAI,SAAAC,GAAI,OACvB,8BACI,qBAAKC,IAAKD,EAAKE,SAAUC,IAAI,MADvBH,EAAKI,SAET,MAIlB,sBAAKX,UAAU,OAAM,UACjB,qBAAKA,UAAU,UACf,6BAAI,gCAER,cAAC,IAAI,CACDY,KAAM,CAAEC,OAAQ,GAAIC,OAAQ,GAC5BC,WAAYV,KAAKT,MAAME,cACvBkB,WAAY,SAAAT,GAAI,OACZ,cAAC,IAAKU,KAAI,UAEN,eAAC,IAAI,CAACC,QAAS,kBAAI,EAAKC,MAAMC,QAAQC,KAAK,aAAD,OAAcd,EAAKe,IAAK,EAAC,UAC/D,qBAAKd,IAAKD,EAAKgB,OAAQb,IAAI,KAC3B,8BAAIH,EAAKiB,KAAKC,OAAO,EAAE,GAAG,aAEtB,IAGpB,sBAAKzB,UAAU,OAAM,UACjB,qBAAKA,UAAU,UACf,6BAAI,gCAER,cAAC,IAAI,CACD0B,KAAK,QACLC,UAAQ,EACRZ,WAAYV,KAAKT,MAAMG,QACvBiB,WAAY,SAAAT,GAAI,OAChB,cAAC,IAAKU,KAAI,CACVC,QAAS,kBAAI,EAAKC,MAAMC,QAAQC,KAAK,SAAD,OAAUd,EAAKe,IAAK,EACxDM,QAAS,CAAC,cAAC,IAAmB,CAAEC,MAAO,CAACC,SAAS,OAAQ,SAEpDvB,EAAKiB,MACE,MAIhC,GAEA,sBACA,SAAStB,GACL6B,QAAQC,IAAI9B,EAChB,GAAC,gCACD,WAEIG,KAAK4B,aACL5B,KAAK6B,kBACL7B,KAAK8B,YACT,GAAC,yEACD,8GAEsB9B,KAAK+B,MAAMC,IAAI,WAAW,KAAD,EAG5B,MAHTC,EAAG,QAGFC,MACHlC,KAAKmC,SAAS,CAAC3C,QAAQyC,EAAIzC,UAC9B,gDACJ,kDATA,IASA,8EACD,8GACsBQ,KAAK+B,MAAMC,IAAI,iBAAgB,OAElC,MAFTC,EAAG,QAEFC,MACHlC,KAAKmC,SAAS,CAAC1C,cAAcwC,EAAIG,SACpC,gDACJ,kDAPA,IAOA,yEACD,8GACsBpC,KAAK+B,MAAMC,IAAI,yBAAwB,OAE1C,MAFTC,EAAG,QAEFC,MACHlC,KAAKmC,SAAS,CAACzC,QAAQuC,EAAIG,SAC9B,gDACJ,kDAPA,IAQD,kCACA,WACIpC,KAAKmC,SAAW,kBAAK,CAAK,CAC9B,KAAC,EArGwB,CAASE,Y","file":"static/js/10.d22226d5.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\n\r\nimport {  Carousel, List, Card } from 'antd';\r\nimport {RightCircleOutlined} from '@ant-design/icons'\r\n\r\n\r\n\r\nexport default class Recommed extends Component {\r\n    state = {\r\n        // 轮播\r\n        banners :[],\r\n        // 推荐\r\n        recommmedList : [],\r\n        // 新歌\r\n        newSong: []\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                  {/* 轮播 */}\r\n                <Carousel \r\n                className=\"lun\" \r\n                afterChange={(event) => this.onChange(event)}\r\n                autoplay={true}\r\n                >\r\n                        { \r\n                        // 这里为什么不是引号了？？\r\n                            this.state.banners.map(item =>(\r\n                                <div key={item.encodeId}>\r\n                                    <img src={item.imageUrl} alt=\"\"/>\r\n                                </div>\r\n                            ))\r\n                        }\r\n                    </Carousel>\r\n                    <div className=\"wrap\">\r\n                        <div className=\"selet\"></div>\r\n                        <h3>推荐歌单</h3>\r\n                    </div>\r\n                    <List\r\n                        grid={{ gutter: 16, column: 3 }}\r\n                        dataSource={this.state.recommmedList}\r\n                        renderItem={item => (\r\n                            <List.Item>\r\n                                {/* 这里不加箭头函数绑定this，会直接跳转，而不是点击跳转 */}\r\n                                <Card onClick={()=>this.props.history.push(`/songlist/${item.id}`)}>\r\n                                    <img src={item.picUrl} alt=\"\" />\r\n                                    <p>{item.name.substr(0,6)}...</p>\r\n                                </Card>\r\n                            </List.Item>\r\n                        )}\r\n                    />\r\n                    <div className=\"wrap\">\r\n                        <div className=\"selet\"></div>\r\n                        <h3>最新音乐</h3>\r\n                    </div>\r\n                    <List\r\n                        size=\"large\" \r\n                        bordered\r\n                        dataSource={this.state.newSong}\r\n                        renderItem={item => \r\n                        <List.Item\r\n                        onClick={()=>this.props.history.push(`/play/${item.id}`)}\r\n                        actions={[<RightCircleOutlined  style={{fontSize:24}}/>]}\r\n                        >\r\n                            {item.name}\r\n                        </List.Item>}\r\n                    />\r\n            </div>\r\n        )\r\n    }\r\n    // 注意这个回调要放在类组件里面，\r\n    // 这里还有问题\r\n    onChange(event) {\r\n        console.log(event);\r\n    }\r\n    componentWillMount(){\r\n        // console.log(this.$http)\r\n        this.getBanners()\r\n        this.getRecommedList()\r\n        this.getNewSong()\r\n    }\r\n    async getBanners(){\r\n        // 这为什么加了api？\r\n        const res = await this.$http.get('/banner');\r\n        // console.log(res)\r\n        // 没有写code\r\n        if(res.code == 200){\r\n            this.setState({banners:res.banners})\r\n        }\r\n    }\r\n    async getRecommedList(){\r\n        const res = await this.$http.get(`/personalized`)\r\n        // console.log(res)\r\n        if(res.code == 200){\r\n            this.setState({recommmedList:res.result})\r\n        }\r\n    }\r\n    async getNewSong(){\r\n        const res = await this.$http.get(`/personalized/newsong`)\r\n        // console.log(res)\r\n        if(res.code == 200){\r\n            this.setState({newSong:res.result})\r\n        }\r\n    }\r\n    // 卸载\r\n    componentWillUnmount(){\r\n        this.setState = () =>false\r\n    }\r\n}\r\n"],"sourceRoot":""}