{"version":3,"sources":["pages/Serch/Serch.jsx"],"names":["Serch","state","serchResult","keywords","hotKeywords","className","value","this","placeholder","onKeyUp","e","submit","onChange","inputUpdate","size","prefix","map","item","type","shape","onClick","handerClick","first","substr","dataSource","renderItem","Item","props","history","push","id","actions","style","fontSize","name","getHot","event","target","setState","keyCode","serch","trim","message","error","$http","get","params","res","code","result","songs","hots","Component"],"mappings":"+SAQqBA,EAAK,iKAMrB,OANqB,oCAEtBC,MAAQ,CACJC,YAAc,GACdC,SAAS,GACTC,YAAY,IACf,EAuGA,OAvGA,mCACD,WAAU,IAAD,OACL,OACI,sBAAKC,UAAU,aAAY,UACvB,qBAAKA,UAAU,UAAS,SACpB,cAAC,IAAK,CACNC,MAAOC,KAAKN,MAAME,SAClBK,YAAY,iCACZC,QAAS,SAACC,GAAC,OAAK,EAAKC,OAAOD,EAAE,EAC9BE,SAAU,SAACF,GAAC,OAAK,EAAKG,YAAYH,EAAE,EACpCI,KAAK,QACLC,OAAQ,cAAC,IAAc,QAG3B,cAAC,IAAO,IACR,qBAAKV,UAAU,kBAAiB,SAExBE,KAAKN,MAAMG,YAAYY,KAAK,SAAAC,GAAI,OAChC,cAAC,IAAM,CACPC,KAAK,UAAUC,MAAM,QAErBC,QAAS,kBAAI,EAAKC,YAAYJ,EAAKK,MAAM,EAAC,SACxCL,EAAKK,MAAMC,OAAO,EAAE,IAFjBN,EAAKK,MAEwB,MAI1C,cAAC,IAAO,IACR,qBAAKjB,UAAU,UAAS,SACxB,cAAC,IAAI,CACGS,KAAK,QACLU,WAAYjB,KAAKN,MAAMC,YACvBuB,WAAY,SAAAR,GAAI,OAChB,cAAC,IAAKS,KAAI,CACVN,QAAS,kBAAI,EAAKO,MAAMC,QAAQC,KAAK,SAAD,OAAUZ,EAAKa,IAAK,EACxDC,QAAS,CAAC,cAAC,IAAmB,CAAEC,MAAO,CAACC,SAAS,OAAQ,SAEpDhB,EAAKiB,MACE,QAKhC,GACA,gCACA,WACI3B,KAAK4B,QACT,GACA,yBACA,SAAYC,GAER,IAAIjC,EAAWiC,EAAMC,OAAO/B,MAC5BC,KAAK+B,SAAS,CAACnC,YACnB,GAEA,oBACA,SAAOiC,GACiB,IAAjBA,EAAMG,SACLhC,KAAKiC,OAGb,GAAC,yBAED,SAAYrC,GAAU,IAAD,OAYjBI,KAAK+B,SAAS,CAACnC,aAAU,WAAK,EAAKqC,OAAO,GAM9C,GACA,oEACA,gGAGI,GACgB,MAFVrC,EAAWI,KAAKN,MAAME,SAASsC,QAEnB,yCACPC,IAAQC,MAAM,mCAAQ,uBAEfpC,KAAKqC,MAAMC,IAAI,UAAU,CAAEC,OAAS,CAAC3C,cAAY,OAGnD,OAHV4C,EAAG,QAGFC,MACHzC,KAAK+B,SAAS,CAACpC,YAAY6C,EAAIE,OAAOC,QACzC,gDACJ,kDAdD,IAeA,qEACA,8GACsB3C,KAAKqC,MAAMC,IAAI,eAAc,OAE/B,OAFVE,EAAG,QAEFC,MACHzC,KAAK+B,SAAS,CAAClC,YAAY2C,EAAIE,OAAOE,OACzC,gDACJ,kDAPD,MAOC,EA7GqB,CAASC,Y","file":"static/js/9.99f6d20b.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\n\r\nimport '../../assets/css/serch.css'\r\nimport { Input ,Button ,Divider ,List , message} from 'antd';\r\nimport { SearchOutlined , RightCircleOutlined} from '@ant-design/icons';\r\n\r\n\r\nexport default class Serch extends Component {\r\n    \r\n    state = {\r\n        serchResult : [],\r\n        keywords:'',\r\n        hotKeywords:[]\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"serch-list\">\r\n                <div className=\"section\">\r\n                    <Input \r\n                    value={this.state.keywords}\r\n                    placeholder=\"请输入内容\" \r\n                    onKeyUp={(e) => this.submit(e)}\r\n                    onChange={(e) => this.inputUpdate(e)}\r\n                    size=\"large\" \r\n                    prefix={<SearchOutlined /> } \r\n                    />\r\n                </div>\r\n                <Divider/>\r\n                <div className=\"section btnwrap\">\r\n                    {\r\n                        this.state.hotKeywords.map( item => (\r\n                        <Button \r\n                        type=\"default\" shape=\"round\" \r\n                        key={item.first}\r\n                        onClick={()=>this.handerClick(item.first)}\r\n                        >{item.first.substr(0,4)}</Button>\r\n                        ))\r\n                    }\r\n                </div>\r\n                <Divider/>\r\n                <div className=\"section\">\r\n                <List\r\n                        size=\"large\" \r\n                        dataSource={this.state.serchResult}\r\n                        renderItem={item => \r\n                        <List.Item\r\n                        onClick={()=>this.props.history.push(`/play/${item.id}`)}\r\n                        actions={[<RightCircleOutlined  style={{fontSize:24}}/>]}\r\n                        >\r\n                            {item.name}\r\n                        </List.Item>}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    // 这个页面写的还有问题\r\n    componentWillMount(){\r\n        this.getHot()\r\n    }\r\n    // \r\n    inputUpdate(event){\r\n        // console.log(event)\r\n        let keywords = event.target.value\r\n        this.setState({keywords})\r\n    }\r\n\r\n    // 提交\r\n    submit(event){\r\n        if(event.keyCode == 13){\r\n            this.serch()\r\n        }\r\n        // console.log(event.keyCode)\r\n    }\r\n    \r\n    handerClick(keywords){\r\n        // 更新状态中的关键词，并搜索\r\n        \r\n\r\n        /***********************************************************\r\n         *   这里为什么不能传递keywords参数呢？                      *\r\n         *   this.setState({keywords},()=>{this.serch(keywords)}  *            \r\n         *   传了反而出大错                                       *\r\n         *   只是方法的调用，传什么参？？？                         *\r\n         *   上面的setState更新歌名就好了                           *\r\n         *   无论是一个方法还是参数，都必须有出处和必要性！！！        *\r\n         ***********************************************************/\r\n        this.setState({keywords},()=>{this.serch()}\r\n        )\r\n        // console.log(keywords)\r\n        // console.log(this.state.keywords)\r\n        // this.setState({keywords:cahu})\r\n        // console.log(this.state.keywords)\r\n    }\r\n    // 搜索\r\n    async serch(){\r\n        // 因为trim()没有加()导致接口无法获得搜索关键字，打印报undefined\r\n        const keywords = this.state.keywords.trim()\r\n        // console.log(keywords)\r\n        if(keywords === ''){\r\n            return message.error('请输入内容')\r\n        }\r\n        const res = await this.$http.get('/search',{ params : {keywords} })\r\n        // console.log(res)\r\n        // console.log(res.result.songs)\r\n        if(res.code === 200 ){\r\n            this.setState({serchResult:res.result.songs})\r\n        }\r\n    }\r\n    // 热歌列表\r\n    async getHot(){\r\n        const res = await this.$http.get('/search/hot')\r\n        // console.log(res)\r\n        if(res.code === 200){\r\n            this.setState({hotKeywords:res.result.hots})\r\n        }\r\n    }\r\n}\r\n"],"sourceRoot":""}