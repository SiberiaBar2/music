{"version":3,"sources":["hooks/useStateSync.js","pages/Serch/Serch.jsx","hooks/useMount.js","hooks/useSyncCallback.js","hooks/useDebounce.js"],"names":["NUMS","Serch","props","callBack","useState","serchResult","setSerchResult","hotKeywords","sethotKeywords","initValue","ref","useRef","callFRef","setFuncRef","state","setState","current","newData","callF","Promise","resolve","useEffect","call","useStateSync","keywords","setKeywords","syncKeywords","callback","proxyState","setProxyState","parameters","setParameters","Func","useCallback","val","useSyncCallback","serchMethod","debouncedKeywords","value","delay","debouncedValue","setDebouncedValue","timeout","setTimeout","clearTimeout","useDebounce","useMemo","trim","$http","get","params","res","code","result","songs","getHot","inputUpdate","event","target","message","error","hots","className","placeholder","onKeyUp","e","keyCode","onChange","size","prefix","SearchOutlined","map","item","style","fontSize","padding","type","shape","onClick","handerClick","first","substr","dataSource","renderItem","Item","history","push","id","actions","RightCircleOutlined","name"],"mappings":"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","file":"static/js/8.2803a76d.chunk.js","sourcesContent":["import { useRef, useState, useEffect } from \"react\";\n\nconst NUMS = {\n    ZERO: 0,\n    ONE: 1,\n};\n\nexport const useStateSync = (initValue) => {\n\n    const ref = useRef(NUMS.ZERO);\n    const callFRef = useRef();\n    const setFuncRef = useRef();\n    const [state, setState] = useState(initValue);\n    if (!ref.current) {\n        ref.current = NUMS.ONE;\n        setFuncRef.current = (newData, callF) => {\n            callFRef.current = callF;\n            setState(newData);\n            return Promise.resolve(newData);\n        };\n    }\n    useEffect(() => {\n        callFRef.current?.(state);\n    }, [state]);\n    return [state, setFuncRef.current];\n};\n","import React, { useMemo, useState } from 'react'\r\n\r\n\r\nimport '../../assets/css/serch.css'\r\nimport { Input ,Button ,Divider ,List , message} from 'antd';\r\nimport { SearchOutlined , RightCircleOutlined} from '@ant-design/icons';\r\nimport { useDebounce , useMount, useStateSync, useSyncCallback } from '../../hooks/index';\r\nimport {$http} from '../../utils/http';\r\n\r\nconst Serch = (props) =>  {\r\n    const [serchResult, setSerchResult] = useState([]);\r\n    const [hotKeywords, sethotKeywords] = useState([]);\r\n\r\n    const [keywords, setKeywords] = useStateSync('');\r\n    const syncKeywords = useSyncCallback(() => {\r\n        serchMethod();\r\n    });\r\n\r\n    const debouncedKeywords = useDebounce(keywords, 700);\r\n    // const $http = React.Component.prototype.$http;\r\n\r\n    useMemo(() => {\r\n        (async() => {\r\n            if(debouncedKeywords.trim() === ''){\r\n                return;\r\n            }\r\n            const res = await $http.get('/search',{ params : {keywords: debouncedKeywords} })\r\n            if(res.code === 200 ){\r\n                setSerchResult(res.result.songs);\r\n            }\r\n        })()\r\n    }, [debouncedKeywords]);\r\n\r\n    useMount(() => {\r\n        getHot();\r\n    });\r\n    const inputUpdate = async (event) => {\r\n        let keywords = event.target.value\r\n        setKeywords(keywords);\r\n    };\r\n\r\n    // 提交\r\n    const submit = (event) => {\r\n        if(event.keyCode === 13){\r\n            serchMethod()\r\n        }\r\n    }\r\n    \r\n    const handerClick = (keywords) => {\r\n            setKeywords(keywords);\r\n            syncKeywords();\r\n    };\r\n    // 搜索\r\n    const serchMethod = async () =>  {\r\n        if(keywords.trim() === ''){\r\n            return message.error('请输入内容')\r\n        }\r\n        const res = await $http.get('/search',{ params : {keywords} })\r\n        if(res.code === 200 ){\r\n            setSerchResult(res.result.songs);\r\n        }\r\n    }\r\n\r\n    // 热歌列表\r\n    const  getHot = async () => {\r\n        const res = await $http.get('/search/hot')\r\n        if(res.code === 200){\r\n            sethotKeywords(res.result.hots);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"serch-list\">\r\n            <div className=\"section\">\r\n                <Input \r\n                    value={keywords}\r\n                    placeholder=\"请输入内容\" \r\n                    onKeyUp={(e) => submit(e)}\r\n                    onChange={(e) => inputUpdate(e)}\r\n                    size=\"large\" \r\n                    prefix={<SearchOutlined /> } \r\n                />\r\n            </div>\r\n            <Divider/>\r\n            <div className=\"section btnwrap\">\r\n                {\r\n                    hotKeywords.map(item => (\r\n                        <Button \r\n                            style={{fontSize: '12rem', padding: 0}}\r\n                            type=\"default\" shape=\"round\" \r\n                            key={item.first}\r\n                            onClick={()=>handerClick(item.first)}\r\n                        >\r\n                            {item.first.substr(0,4)}\r\n                        </Button>\r\n                    ))\r\n                }\r\n            </div>\r\n            <Divider/>\r\n            <div className=\"section\">\r\n            <List\r\n                size=\"large\" \r\n                dataSource={serchResult}\r\n                renderItem={item => \r\n                <List.Item\r\n                onClick={()=> props.history.push(`/play/${item.id}`)}\r\n                actions={[<RightCircleOutlined  style={{fontSize:24}}/>]}\r\n                >\r\n                    {item.name}\r\n                </List.Item>}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Serch;\r\n","import { useEffect } from \"react\";\n\nexport const useMount = (callBack) => {\n    useEffect(() => {\n      callBack();\n    }, []);\n};\n","import {useState, useEffect, useCallback} from 'react';\n\nexport const useSyncCallback = (callback) => {\n    const [proxyState, setProxyState] = useState({current: false});\n    const [parameters, setParameters] = useState();\n\n    const Func = useCallback((val) => {\n        setParameters(val);\n        setProxyState({current: true});\n    }, []);\n\n    useEffect(() => {\n        if (proxyState.current === true) {\n            setProxyState({current: false});\n        }\n    }, [proxyState]);\n\n    useEffect(() => {\n        proxyState.current && callback(parameters);\n    });\n\n    return Func;\n};\n","// import { useState, useEffect } from \"react\";\n\n// export function useDebounce(value, delay = 300) {\n//     const [debouncedValue, setDebouncedValue] = useState(value);\n//       useEffect(() => {\n//         const handler = window.setTimeout(() => {\n//           setDebouncedValue(value);\n//         }, delay);\n//         return () => {\n//           clearTimeout(handler);\n//         };\n//     }, [value, delay]);\n//     return debouncedValue;\n// }\n\nimport { useEffect, useState } from \"react\";\n\nexport const useDebounce = (value, delay) => {\n    const [debouncedValue, setDebouncedValue] = useState(value);\n\n    useEffect(() => {\n        // 每次在value变化以后设置一个定时器\n        let timeout = setTimeout(() => setDebouncedValue(value), delay);\n        // 每次在上一个的effect执行完后执行\n        return () => clearTimeout(timeout);\n    }, [delay, value]);\n\n    return debouncedValue;\n};"],"sourceRoot":""}