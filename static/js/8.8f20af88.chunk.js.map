{"version":3,"sources":["pages/play/Play.jsx"],"names":["Play","state","status","deg","info","lyric","playUrl","className","style","transform","this","src","picUrl","onClick","toggle","join","controls","ref","dom","music","display","name","map","item","index","getDetail","getPlayUrl","getLyric","setState","play","pause","ids","props","match","params","id","$http","get","res","code","songs","al","data","url","lyricFmt","lrc","arr","replace","a","b","c","push","Component"],"mappings":"iPAGqBA,EAAI,kDACrB,aAAc,IAAD,EAaR,OAbQ,qBACT,gBACKC,MAAQ,CAGTC,QAAS,EACTC,IAAI,QAEJC,KAAK,CAAC,EAENC,MAAM,GAENC,QAAQ,IACX,CACL,CAuFC,OAvFA,mCACD,WAAU,IAAD,OACL,OACI,mCACI,sBAAKC,UAAU,iBAAgB,UAE3B,qBAAKA,UAAU,eAAeC,MAAO,CAACC,UAAU,UAAD,OAAYC,KAAKT,MAAME,IAAG,QACzE,sBAAKI,UAAU,WAAU,UACrB,qBAAKA,UAAWG,KAAKT,MAAMC,OAAS,GAAK,SAAUS,IAAKD,KAAKT,MAAMG,KAAKQ,SACxE,qBACAC,QAAS,kBAAI,EAAKC,QAAQ,EAC1BP,UAAW,CAAC,MAAMG,KAAKT,MAAMC,OAAO,WAAW,aAAaa,KAAK,UAErE,uBAAOJ,IAAKD,KAAKT,MAAMK,QAASU,UAAQ,EAACC,IAAK,SAACC,GAAG,OAAG,EAAKC,MAAMD,CAAG,EAAEV,MAAO,CAACY,QAAQ,UACrF,sBAAKb,UAAU,UAAS,UACpB,6BAAKG,KAAKT,MAAMG,KAAKiB,OACrB,8BAEQX,KAAKT,MAAMI,MAAMiB,KAAI,SAACC,EAAMC,GAAK,OAAK,4BAAgBD,GAARC,EAAiB,aAO3F,GAAC,+BACD,WACId,KAAKe,YACLf,KAAKgB,aACLhB,KAAKiB,UACT,GACA,oBACA,WAKI,IAAMxB,EAAMO,KAAKT,MAAMC,OAAS,EAAI,QACpCQ,KAAKkB,SAAS,CAAC1B,QAASQ,KAAKT,MAAMC,OAAOC,QAEtCO,KAAKT,MAAMC,OAKXQ,KAAKS,MAAMU,OAFXnB,KAAKS,MAAMW,OAInB,GAEA,wEACA,gGAEI,OADMC,EAAMrB,KAAKsB,MAAMC,MAAMC,OAAOC,GACpC,SACkBzB,KAAK0B,MAAMC,IAAI,eAAe,CAAEH,OAAS,CAAEH,SAAQ,OAErD,OAFVO,EAAG,QAEFC,MACH7B,KAAKkB,SAAS,CAACxB,KAAKkC,EAAIE,MAAM,GAAGC,KACpC,gDACJ,kDATD,IAWA,yEACA,kGACyC,OAA/BN,EAAKzB,KAAKsB,MAAMC,MAAMC,OAAOC,GAAE,SACnBzB,KAAK0B,MAAMC,IAAI,YAAY,CAAEH,OAAS,CAACC,QAAM,OAE/C,OAFVG,EAAG,QAEFC,OACGjC,EAAUgC,EAAII,KAAK,GAAGC,IAC5BjC,KAAKkB,SAAS,CAACtB,aAClB,gDACJ,kDATD,IAWA,uEACA,kGACyC,OAA/B6B,EAAKzB,KAAKsB,MAAMC,MAAMC,OAAOC,GAAE,SACnBzB,KAAK0B,MAAMC,IAAI,SAAS,CAAEH,OAAS,CAAEC,QAAO,OAAxDG,EAAG,OAEHjC,EAAQK,KAAKkC,SAASN,EAAIO,IAAIxC,OACpCK,KAAKkB,SAAS,CAACvB,UAAO,gDACzB,kDAPD,IAQA,sBACA,SAASA,GACL,IACMyC,EAAI,GAIV,OAHAzC,EAAM0C,QAFI,iBAEQ,SAACC,EAAEC,EAAEC,GACnBJ,EAAIK,KAAKD,EACb,IACOJ,CACX,KAAC,EAtGoB,CAASM,Y","file":"static/js/8.8f20af88.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport '../../assets/css/play.css'\r\nexport default class Play extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            //  true是当前未播放，点击后播放的按钮\r\n            //  false是当前正播放，点击后暂停按钮\r\n            status : true,\r\n            deg:'15deg',\r\n            // 歌曲信息\r\n            info:{},\r\n            // 歌词\r\n            lyric:[],\r\n            // 音乐播放地址\r\n            playUrl:[]\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"play-container\">\r\n                    {/* 音乐播放控件 */}\r\n                    <div className=\"play-control\" style={{transform: `rotate(${this.state.deg})`}}></div>\r\n                    <div className=\"play-box\">\r\n                        <img className={this.state.status ? '' : 'rotate'} src={this.state.info.picUrl}></img>\r\n                        <div \r\n                        onClick={()=>this.toggle()}\r\n                        className={[\"btn\",this.state.status?\"play-btn\":\"pause-btn\"].join(' ')}></div>\r\n                    </div>\r\n                    <audio src={this.state.playUrl} controls ref={(dom)=>this.music=dom} style={{display:'none'}}></audio>\r\n                    <div className=\"content\">\r\n                        <h3>{this.state.info.name}</h3>\r\n                        <div>\r\n                            {\r\n                                this.state.lyric.map((item, index) => <p key={index}>{item}</p>)\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n    componentDidMount(){\r\n        this.getDetail()\r\n        this.getPlayUrl()\r\n        this.getLyric()\r\n    }\r\n    // 控制音乐的播放状态\r\n    toggle(){\r\n        /**\r\n         * 1-按钮图标的变化\r\n         * 2-音乐的播放暂停\r\n         */\r\n        const deg = this.state.status ? 0 : '15deg'\r\n        this.setState({status :!this.state.status,deg})\r\n        // if(this.state.status){}\r\n        if(!this.state.status){\r\n            // 如果是播放状态 ，点击后暂停\r\n            // 为什么audio标签虚拟dom对象上有播放和暂停\r\n            this.music.pause()\r\n        }else{\r\n            this.music.play()\r\n        }\r\n    }\r\n\r\n    // 获取音乐详情\r\n    async getDetail(){\r\n        const ids = this.props.match.params.id\r\n        // 这里为什么请求错误呢？因为params写错了\r\n        const res = await this.$http.get('/song/detail',{ params : { ids } })\r\n        // console.log(res)\r\n        if(res.code === 200){\r\n            this.setState({info:res.songs[0].al})\r\n        }\r\n    }\r\n\r\n    // 获取音乐播放地址\r\n    async getPlayUrl(){\r\n        const id = this.props.match.params.id\r\n        const res = await this.$http.get('/song/url',{ params : {id} })\r\n        // console.log(res)\r\n        if(res.code === 200){\r\n            const playUrl = res.data[0].url\r\n            this.setState({playUrl})\r\n        }\r\n    }\r\n\r\n    // 获取歌词\r\n    async getLyric(){\r\n        const id = this.props.match.params.id\r\n        const res = await this.$http.get(`/lyric`,{ params : { id } })\r\n        // console.log(res.lrc.lyric)\r\n        const lyric = this.lyricFmt(res.lrc.lyric)\r\n        this.setState({lyric})\r\n    }\r\n    // 格式化歌词\r\n    lyricFmt(lyric){\r\n        const reg=/\\[(.*)\\](.*)/g;\r\n        const arr=[];\r\n        lyric.replace(reg,(a,b,c)=>{\r\n            arr.push(c);\r\n        });\r\n        return arr;\r\n    }\r\n}\r\n"],"sourceRoot":""}